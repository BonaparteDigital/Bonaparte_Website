{"version":3,"file":"component---src-pages-using-typescript-tsx.js","mappings":"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","sources":["webpack://bonaparte-website/./src/pages/using-typescript.tsx","webpack://bonaparte-website/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, image, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            image\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={image} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.social?.twitter || ``}/>\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","location","createElement","title","site","buildTime","href","to","Head","query","useStaticQuery","description","image","children","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","metaDescription","siteMetadata","defaultTitle","Fragment","name","content","property","social","twitter"],"sourceRoot":""}