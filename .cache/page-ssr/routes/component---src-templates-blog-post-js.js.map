{"version":3,"file":"component---src-templates-blog-post-js.js","mappings":";;;;;;;;;;;;;;;;;;;AAOA,KAAM,CAAAK,gBAAgB,CAAGA,CAAC,CACxBC,IAAI,CAAE,CAAEC,QAAQ,CAAEC,IAAI,CAAEC,IAAI,CAAEC,cAAc,CAAEC,IAAK,CAAC,CACpDC,QACF,CAAC,GAAK,KAAAC,kBAAA,CACJ,KAAM,CAAAC,SAAS,CAAG,EAAAD,kBAAA,CAAAJ,IAAI,CAACM,YAAY,UAAAF,kBAAA,iBAAjBA,kBAAA,CAAmBG,KAAK,GAAK,OAAM,CAErD,mBACEhB,gDAAA,CAACG,mEAAM,EAACS,QAAQ,CAAEA,QAAS,CAACI,KAAK,CAAEF,SAAU,eAC3Cd,gDAAA,YACEkB,SAAS,CAAC,WAAW,CACrBC,SAAS,MACTC,QAAQ,CAAC,2BAA2B,eAEpCpB,gDAAA,4BACEA,gDAAA,OAAIqB,QAAQ,CAAC,UAAU,EAAEV,IAAI,CAACW,WAAW,CAACN,KAAU,CAAC,cACrDhB,gDAAA,UAAIW,IAAI,CAACW,WAAW,CAACC,IAAQ,CACvB,CAAC,cACTvB,gDAAA,YACEwB,uBAAuB,CAAE,CAAEC,MAAM,CAAEd,IAAI,CAACe,IAAK,CAAE,CAC/CL,QAAQ,CAAC,aAAa,CACvB,CAAC,cACFrB,gDAAA,UAAK,CAAC,cACNA,gDAAA,4BACEA,gDAAA,CAACE,gEAAG,KAAE,CACA,CACD,CAAC,cACVF,gDAAA,QAAKkB,SAAS,CAAC,eAAe,eAC5BlB,gDAAA,OACE2B,KAAK,CAAE,CACLC,OAAO,CAAG,MAAK,CACfC,QAAQ,CAAG,MAAK,CAChBC,cAAc,CAAG,eAAc,CAC/BC,SAAS,CAAG,MAAK,CACjBC,OAAO,CAAE,CACX,CAAE,eAEFhC,gDAAA,WACGO,QAAQ,eACPP,gDAAA,CAACC,wCAAI,EAACgC,EAAE,CAAE1B,QAAQ,CAAC2B,MAAM,CAACC,IAAK,CAACC,GAAG,CAAC,MAAM,EAAC,SACvC,CAAC7B,QAAQ,CAACe,WAAW,CAACN,KACpB,CAEN,CAAC,cACLhB,gDAAA,WACGQ,IAAI,eACHR,gDAAA,CAACC,wCAAI,EAACgC,EAAE,CAAEzB,IAAI,CAAC0B,MAAM,CAACC,IAAK,CAACC,GAAG,CAAC,MAAM,EACnC5B,IAAI,CAACc,WAAW,CAACN,KAAK,CAAC,SACpB,CAEN,CACF,CACD,CACC,CAAC,CAEb,CAAC,CAEM,KAAM,CAAAqB,IAAI,CAAGA,CAAC,CAAE/B,IAAI,CAAE,CAAEI,cAAc,CAAEC,IAAK,CAAE,CAAC,GAAK,CAC1D,mBACEX,gDAAA,CAACI,gEAAG,EACFY,KAAK,CAAEL,IAAI,CAACW,WAAW,CAACN,KAAM,CAC9BsB,WAAW,CAAE3B,IAAI,CAACW,WAAW,CAACgB,WAAW,EAAI3B,IAAI,CAAC4B,OAAQ,CAC3D,CAAC,CAEN,CAAC,CAED,iEAAelC,gBAAgB,EAExB,KAAM,CAAAmC,SAAS,aAsCrB","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`"],"names":["React","Link","Bio","Layout","Seo","BlogPostTemplate","data","previous","next","site","markdownRemark","post","location","_site$siteMetadata","siteTitle","siteMetadata","title","createElement","className","itemScope","itemType","itemProp","frontmatter","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","Head","description","excerpt","pageQuery"],"sourceRoot":""}