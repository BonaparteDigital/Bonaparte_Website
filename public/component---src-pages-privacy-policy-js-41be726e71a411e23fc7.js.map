{"version":3,"file":"component---src-pages-privacy-policy-js-41be726e71a411e23fc7.js","mappings":"mJAgDA,IAtCYA,IAA8C,IAADC,EAAAC,EAAAC,EAAA,IAA5C,YAAEC,EAAW,MAAEC,EAAK,MAAEC,EAAK,SAAEC,GAAUP,EAClD,MAAM,KAAEQ,IAASC,EAAAA,EAAAA,gBAAe,cAiB1BC,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAgC,QAApBX,EAAGO,EAAKG,oBAAY,IAAAV,OAAA,EAAjBA,EAAmBI,MAExC,OACEQ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQD,EAAkBP,EAAK,MAAMO,EAAiBP,GACtDQ,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASL,IAClCG,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAASV,IACnCQ,EAAAA,cAAA,QAAMG,SAAS,iBAAiBD,QAASL,IACzCG,EAAAA,cAAA,QAAMG,SAAS,UAAUD,QAAQ,YACjCF,EAAAA,cAAA,QAAMG,SAAS,WAAWD,QAAST,IACnCO,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,SAA0B,QAAjBb,EAAAM,EAAKG,oBAAY,IAAAT,GAAQ,QAARC,EAAjBD,EAAmBe,cAAM,IAAAd,OAAR,EAAjBA,EAA2Be,UAAO,KACxEL,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASV,IACpCQ,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASL,IACzCH,EACA,C,mGCtCP,MAaaY,EAAOA,IAAMN,EAAAA,cAACO,EAAAA,EAAG,CAACf,MAAM,+BAErC,UAfsBL,IAAyB,IAAxB,KAAEqB,EAAI,SAAEC,GAAUtB,EACvC,MAAMuB,EAAYF,EAAKb,KAAKG,aAAaN,MAEzC,OACEQ,EAAAA,cAACW,EAAAA,EAAM,CAACF,SAAUA,EAAUjB,MAAOkB,GACjCV,EAAAA,cAAA,OAAKY,UAAU,aACbZ,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,qFAEE,C","sources":["webpack://bonaparte-website/./src/components/seo.js","webpack://bonaparte-website/./src/pages/privacy-policy.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, image, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            image\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image\" content={image} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.social?.twitter || ``}/>\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst PrivacyPolicy = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <div className=\"container\">\n        <h1>404: Not Found</h1>\n        <p>YArretez! It looks like the place we are looking for does exist... let's go back</p>\n      </div>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Bonaparte | Privacy Policy\" />\n\nexport default PrivacyPolicy\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`"],"names":["_ref","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","title","image","children","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","React","name","content","property","social","twitter","Head","Seo","data","location","siteTitle","Layout","className"],"sourceRoot":""}